import{_ as d,c as r,o as e,a2 as o}from"./chunks/framework.PmJZTPTE.js";const p=JSON.parse('{"title":"Node compatibility","description":"This library provides basic support most common node core packages.","frontmatter":{"title":"Node compatibility","description":"This library provides basic support most common node core packages.","order":10000},"headers":[],"relativePath":"docs/module-resolution/node-compatibility.md","filePath":"docs/module-resolution/node-compatibility.md","lastUpdated":1740685031000}'),i={name:"docs/module-resolution/node-compatibility.md"};function a(n,t,s,c,l,h){return e(),r("div",null,t[0]||(t[0]=[o('<h1 id="node-compatibility" tabindex="-1">Node compatibility <a class="header-anchor" href="#node-compatibility" aria-label="Permalink to &quot;Node compatibility&quot;">​</a></h1><p>This library tries to provide basic support for most common used Node.js modules and use cases. The focus is not to provide a 100% Node.js compatibility environment.</p><table tabindex="0"><thead><tr><th>Module</th><th>Supported</th><th>Description</th></tr></thead><tbody><tr><td><code>assert</code></td><td>✅</td><td>Provides a set of assertion functions for testing</td></tr><tr><td><code>async_hooks</code></td><td>❌</td><td>Provides an API to track asynchronous resources</td></tr><tr><td><code>buffer</code></td><td>✅</td><td>Provides a way of handling binary data</td></tr><tr><td><code>child_process</code></td><td>❌</td><td>Allows for the creation of child processes</td></tr><tr><td><code>cluster</code></td><td>❌</td><td>Provides support for creating a cluster of Node.js processes</td></tr><tr><td><code>console</code></td><td>❌</td><td>Simple debugging console similar to the JavaScript console</td></tr><tr><td><code>crypto</code></td><td>❌</td><td>Provides cryptographic functionality</td></tr><tr><td><code>dgram</code></td><td>❌</td><td>Provides implementation of UDP datagram sockets</td></tr><tr><td><code>dns</code></td><td>❌</td><td>Provides DNS lookups and name resolution functions</td></tr><tr><td><code>domain</code></td><td>❌</td><td>Simplified handling of uncaught exceptions</td></tr><tr><td><code>events</code></td><td>✅</td><td>Provides an event-driven programming model</td></tr><tr><td><code>fs</code></td><td>✅</td><td>Provides an API for interacting with the file system</td></tr><tr><td><code>http</code></td><td>❌</td><td>Provides HTTP server and client functionality</td></tr><tr><td><code>http2</code></td><td>❌</td><td>Provides HTTP/2 server and client functionality</td></tr><tr><td><code>https</code></td><td>❌</td><td>Provides HTTPS server and client functionality</td></tr><tr><td><code>inspector</code></td><td>❌</td><td>Provides an interface for debugging Node.js applications</td></tr><tr><td><code>module</code></td><td>✅</td><td>Load and manage Node.js modules</td></tr><tr><td><code>net</code></td><td>❌</td><td>Provides an asynchronous network API</td></tr><tr><td><code>os</code></td><td>❌</td><td>Provides operating system-related utility methods</td></tr><tr><td><code>path</code></td><td>✅</td><td>Provides utilities for working with file and directory paths</td></tr><tr><td><code>perf_hooks</code></td><td>❌</td><td>Performance timing APIs</td></tr><tr><td><code>process</code></td><td>✅</td><td>Provides information and control over the current process</td></tr><tr><td><code>punycode</code></td><td>✅</td><td>Provides encoding and decoding of Punycode</td></tr><tr><td><code>querystring</code></td><td>✅</td><td>Provides utilities for parsing and formatting URL query strings</td></tr><tr><td><code>readline</code></td><td>❌</td><td>Provides an interface for reading data from a Readable stream</td></tr><tr><td><code>repl</code></td><td>❌</td><td>Provides a Read-Eval-Print Loop (REPL) interface</td></tr><tr><td><code>stream</code></td><td>❌</td><td>Provides an API for implementing stream-based I/O</td></tr><tr><td><code>string_decoder</code></td><td>✅</td><td>Provides utilities for decoding buffer objects into strings</td></tr><tr><td><code>timers</code></td><td>❌</td><td>Provides timer functions similar to those in JavaScript</td></tr><tr><td><code>tls</code></td><td>❌</td><td>Provides an implementation of TLS and SSL protocols</td></tr><tr><td><code>trace_events</code></td><td>❌</td><td>Provides a mechanism to centralize tracing information</td></tr><tr><td><code>tty</code></td><td>❌</td><td>Provides utilities for working with TTYs (terminals)</td></tr><tr><td><code>url</code></td><td>✅</td><td>Provides utilities for URL resolution and parsing</td></tr><tr><td><code>util</code></td><td>✅</td><td>Provides various utility functions</td></tr><tr><td><code>v8</code></td><td>❌</td><td>Provides an API for interacting with the V8 JavaScript engine</td></tr><tr><td><code>vm</code></td><td>❌</td><td>Provides APIs for compiling and running code within V8 VM contexts</td></tr><tr><td><code>worker_threads</code></td><td>❌</td><td>Provides a mechanism to use threads for JavaScript execution</td></tr><tr><td><code>zlib</code></td><td>❌</td><td>Provides compression and decompression functionalities</td></tr></tbody></table><h2 id="node-fs" tabindex="-1">node:fs <a class="header-anchor" href="#node-fs" aria-label="Permalink to &quot;node:fs&quot;">​</a></h2><p>Thanks to <a href="https://github.com/streamich/memfs" target="_blank" rel="noreferrer">memfs</a>, this lib provides basic support of <code>node:fs</code> and <code>node:fs/promises</code> module.</p><table tabindex="0"><thead><tr><th>Method</th><th>Supported</th></tr></thead><tbody><tr><td>access</td><td></td></tr><tr><td>accessSync</td><td></td></tr><tr><td>appendFile</td><td>✅</td></tr><tr><td>appendFileSync</td><td>✅</td></tr><tr><td>chmod</td><td>❌</td></tr><tr><td>chmodSync</td><td>❌</td></tr><tr><td>chown</td><td>❌</td></tr><tr><td>chownSync</td><td>❌</td></tr><tr><td>close</td><td></td></tr><tr><td>closeSync</td><td></td></tr><tr><td>copyFile</td><td></td></tr><tr><td>copyFileSync</td><td></td></tr><tr><td>createReadStream</td><td></td></tr><tr><td>createWriteStream</td><td></td></tr><tr><td>exists</td><td>✅</td></tr><tr><td>existsSync</td><td>✅</td></tr><tr><td>fchmod</td><td>❌</td></tr><tr><td>fchmodSync</td><td>❌</td></tr><tr><td>fchown</td><td>❌</td></tr><tr><td>fchownSync</td><td>❌</td></tr><tr><td>fdatasync</td><td></td></tr><tr><td>fdatasyncSync</td><td></td></tr><tr><td>fstat</td><td></td></tr><tr><td>fstatSync</td><td></td></tr><tr><td>fsync</td><td></td></tr><tr><td>fsyncSync</td><td></td></tr><tr><td>ftruncate</td><td></td></tr><tr><td>ftruncateSync</td><td></td></tr><tr><td>futimes</td><td></td></tr><tr><td>futimesSync</td><td></td></tr><tr><td>lchmod</td><td>❌</td></tr><tr><td>lchmodSync</td><td>❌</td></tr><tr><td>lchown</td><td>❌</td></tr><tr><td>lchownSync</td><td>❌</td></tr><tr><td>link</td><td></td></tr><tr><td>linkSync</td><td></td></tr><tr><td>lstat</td><td></td></tr><tr><td>lstatSync</td><td></td></tr><tr><td>mkdir</td><td>✅</td></tr><tr><td>mkdirSync</td><td>✅</td></tr><tr><td>mkdtemp</td><td>✅</td></tr><tr><td>mkdtempSync</td><td>✅</td></tr><tr><td>open</td><td></td></tr><tr><td>openSync</td><td></td></tr><tr><td>readdir</td><td>✅</td></tr><tr><td>readdirSync</td><td>✅</td></tr><tr><td>read</td><td></td></tr><tr><td>readSync</td><td></td></tr><tr><td>readFile</td><td>✅</td></tr><tr><td>readFileSync</td><td>✅</td></tr><tr><td>readlink</td><td></td></tr><tr><td>readlinkSync</td><td></td></tr><tr><td>realpath</td><td></td></tr><tr><td>realpathSync</td><td></td></tr><tr><td>rename</td><td>✅</td></tr><tr><td>renameSync</td><td>✅</td></tr><tr><td>rmdir</td><td>✅</td></tr><tr><td>rmdirSync</td><td>✅</td></tr><tr><td>stat</td><td></td></tr><tr><td>statSync</td><td></td></tr><tr><td>symlink</td><td></td></tr><tr><td>symlinkSync</td><td></td></tr><tr><td>truncate</td><td></td></tr><tr><td>truncateSync</td><td></td></tr><tr><td>unlink</td><td></td></tr><tr><td>unlinkSync</td><td></td></tr><tr><td>utimes</td><td></td></tr><tr><td>utimesSync</td><td></td></tr><tr><td>write</td><td></td></tr><tr><td>writeSync</td><td></td></tr><tr><td>writeFile</td><td>✅</td></tr><tr><td>writeFileSync</td><td>✅</td></tr></tbody></table><h2 id="node-assert" tabindex="-1">node:assert <a class="header-anchor" href="#node-assert" aria-label="Permalink to &quot;node:assert&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Supported</th></tr></thead><tbody><tr><td>fail</td><td>✅</td></tr><tr><td>ok</td><td>✅</td></tr><tr><td>equal</td><td>✅</td></tr><tr><td>notEqual</td><td>✅</td></tr><tr><td>deepEqual</td><td>✅</td></tr><tr><td>notDeepEqual</td><td>✅</td></tr><tr><td>strictEqual</td><td>✅</td></tr><tr><td>notStrictEqual</td><td>✅</td></tr></tbody></table><h2 id="node-module" tabindex="-1">node:module <a class="header-anchor" href="#node-module" aria-label="Permalink to &quot;node:module&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Supported</th></tr></thead><tbody><tr><td>createRequire</td><td>✅</td></tr><tr><td>isBuiltin</td><td>✅</td></tr><tr><td>register</td><td>❌</td></tr><tr><td>syncBuiltinESMExports</td><td>❌</td></tr></tbody></table><h2 id="node-path" tabindex="-1">node:path <a class="header-anchor" href="#node-path" aria-label="Permalink to &quot;node:path&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Supported</th></tr></thead><tbody><tr><td>parse</td><td>✅</td></tr><tr><td>format</td><td>✅</td></tr><tr><td>extname</td><td>✅</td></tr><tr><td>basename</td><td>✅</td></tr><tr><td>dirname</td><td>✅</td></tr><tr><td>_makeLong</td><td>✅</td></tr><tr><td>relative</td><td>✅</td></tr><tr><td>join</td><td>✅</td></tr><tr><td>isAbsolute</td><td>✅</td></tr><tr><td>normalize</td><td>✅</td></tr><tr><td>resolve</td><td>✅</td></tr><tr><td>_format</td><td>✅</td></tr><tr><td>normalizeStringPosix</td><td>✅</td></tr><tr><td>assertPath</td><td>✅</td></tr></tbody></table><h2 id="node-util" tabindex="-1">node:util <a class="header-anchor" href="#node-util" aria-label="Permalink to &quot;node:util&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Method</th><th>Supported</th></tr></thead><tbody><tr><td>promisify</td><td>✅</td></tr><tr><td>callbackify</td><td>✅</td></tr><tr><td>inherits</td><td>✅</td></tr><tr><td>deprecate</td><td>✅</td></tr></tbody></table><p>Here are the supported <code>util.types</code> methods:</p><table tabindex="0"><thead><tr><th>Method</th><th>Supported</th></tr></thead><tbody><tr><td>isAnyArrayBuffer</td><td>✅</td></tr><tr><td>isArrayBufferView</td><td>✅</td></tr><tr><td>isArgumentsObject</td><td>✅</td></tr><tr><td>isArrayBuffer</td><td>✅</td></tr><tr><td>isAsyncFunction</td><td>✅</td></tr><tr><td>isBigInt64Array</td><td>✅</td></tr><tr><td>isBigUint64Array</td><td>✅</td></tr><tr><td>isBooleanObject</td><td>✅</td></tr><tr><td>isBoxedPrimitive</td><td>✅</td></tr><tr><td>isDataView</td><td>✅</td></tr><tr><td>isDate</td><td>✅</td></tr><tr><td>isFloat32Array</td><td>✅</td></tr><tr><td>isFloat64Array</td><td>✅</td></tr><tr><td>isGeneratorFunction</td><td>✅</td></tr><tr><td>isGeneratorObject</td><td>✅</td></tr><tr><td>isInt8Array</td><td>✅</td></tr><tr><td>isInt16Array</td><td>✅</td></tr><tr><td>isInt32Array</td><td>✅</td></tr><tr><td>isMap</td><td>✅</td></tr><tr><td>isMapIterator</td><td>✅</td></tr><tr><td>isNativeError</td><td>✅</td></tr><tr><td>isNumberObject</td><td>✅</td></tr><tr><td>isPromise</td><td>✅</td></tr><tr><td>isRegExp</td><td>✅</td></tr><tr><td>isSet</td><td>✅</td></tr><tr><td>isSetIterator</td><td>✅</td></tr><tr><td>isSharedArrayBuffer</td><td>✅</td></tr><tr><td>isStringObject</td><td>✅</td></tr><tr><td>isSymbolObject</td><td>✅</td></tr><tr><td>isTypedArray</td><td>✅</td></tr><tr><td>isUint8Array</td><td>✅</td></tr><tr><td>isUint8ClampedArray</td><td>✅</td></tr><tr><td>isUint16Array</td><td>✅</td></tr><tr><td>isUint32Array</td><td>✅</td></tr><tr><td>isWeakMap</td><td>✅</td></tr><tr><td>isWeakSet</td><td>✅</td></tr></tbody></table><h2 id="node-events" tabindex="-1">node:events <a class="header-anchor" href="#node-events" aria-label="Permalink to &quot;node:events&quot;">​</a></h2><p>A copy of <a href="https://github.com/primus/eventemitter3" target="_blank" rel="noreferrer">eventemitter3</a> is used.</p>',18)]))}const u=d(i,[["render",a]]);export{p as __pageData,u as default};
