import{_ as i,c as a,o as e,a2 as n}from"./chunks/framework.PmJZTPTE.js";const d=JSON.parse('{"title":"Announcing QuickJS 1.0.0","description":"Version 1.0 of the QuickJS package is released. A TypeScript package that allows you to safely execute JavaScript code within a WebAssembly sandbox using the QuickJS engine.","frontmatter":{"title":"Announcing QuickJS 1.0.0","description":"Version 1.0 of the QuickJS package is released. A TypeScript package that allows you to safely execute JavaScript code within a WebAssembly sandbox using the QuickJS engine.","date":"2024-07-07T12:00:00.000Z","categories":"release"},"headers":[],"relativePath":"blog/release.md","filePath":"blog/release.md","lastUpdated":1726010448000}'),t={name:"blog/release.md"};function l(r,s,h,p,o,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="announcing-quickjs-1-0-0" tabindex="-1">Announcing QuickJS 1.0.0 <a class="header-anchor" href="#announcing-quickjs-1-0-0" aria-label="Permalink to &quot;Announcing QuickJS 1.0.0&quot;">​</a></h2><p>We are excited to announce the release of <strong>QuickJS 1.0.0</strong>, a TypeScript package that allows you to safely execute JavaScript code within a WebAssembly sandbox using the QuickJS engine. Perfect for isolating and running untrusted code securely, QuickJS leverages the lightweight and fast QuickJS engine compiled to WebAssembly, providing a robust environment for code execution.</p><h3 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h3><ul><li><strong>Security</strong>: Run untrusted JavaScript code in a safe, isolated environment.</li><li><strong>File System</strong>: Can mount a virtual file system.</li><li><strong>Custom Node Modules</strong>: Custom node modules are mountable.</li><li><strong>Fetch Client</strong>: Can provide a fetch client to make http(s) calls.</li><li><strong>Test-Runner</strong>: Includes a test runner and chai-based <code>expect</code>.</li><li><strong>Performance</strong>: Benefit from the lightweight and efficient QuickJS engine.</li><li><strong>Versatility</strong>: Easily integrate with existing TypeScript projects.</li><li><strong>Simplicity</strong>: User-friendly API for executing and managing JavaScript code in the sandbox.</li></ul><h3 id="full-documentation-and-examples" tabindex="-1">Full Documentation and Examples <a class="header-anchor" href="#full-documentation-and-examples" aria-label="Permalink to &quot;Full Documentation and Examples&quot;">​</a></h3><ul><li><strong><a href="https://sebastianwessel.github.io/quickjs/" target="_blank" rel="noreferrer">View the full documentation</a></strong></li><li><strong><a href="https://github.com/sebastianwessel/quickjs/tree/main/example" target="_blank" rel="noreferrer">Find examples in the repository</a></strong></li></ul><h3 id="basic-usage-example" tabindex="-1">Basic Usage Example <a class="header-anchor" href="#basic-usage-example" aria-label="Permalink to &quot;Basic Usage Example&quot;">​</a></h3><p>Here&#39;s a simple example of how to use the package:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { quickJS } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@sebastianwessel/quickjs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// General setup like loading and init of the QuickJS wasm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// It is a resource-intensive job and should be done only once if possible </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">createRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> quickJS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create a runtime instance each time a js code should be executed</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evalCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  allowFetch: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// inject fetch and allow the code to fetch data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  allowFs: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// mount a virtual file system and provide node:fs module</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  env: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MY_ENV_VAR: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;env var value&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> evalCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import { join } as path from &#39;path&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const fn = async () =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  console.log(join(&#39;src&#39;,&#39;dist&#39;)) // logs &quot;src/dist&quot; on host system</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  console.log(env.MY_ENV_VAR) // logs &quot;env var value&quot; on host system</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  const url = new URL(&#39;https://example.com&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  const f = await fetch(url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  return f.text()</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">export default await fn()</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { ok: true, data: &#39;&lt;!doctype html&gt;\\n&lt;html&gt;\\n[....]&lt;/html&gt;\\n&#39; }</span></span></code></pre></div><h3 id="credits" tabindex="-1">Credits <a class="header-anchor" href="#credits" aria-label="Permalink to &quot;Credits&quot;">​</a></h3><p>This library is based on:</p><ul><li><a href="https://github.com/justjake/quickjs-emscripten" target="_blank" rel="noreferrer">quickjs-emscripten</a></li><li><a href="https://github.com/reearth/quickjs-emscripten-sync" target="_blank" rel="noreferrer">quickjs-emscripten-sync</a></li><li><a href="https://github.com/streamich/memfs" target="_blank" rel="noreferrer">memfs</a></li></ul><p>Tools used:</p><ul><li><a href="https://bun.sh" target="_blank" rel="noreferrer">Bun</a></li><li><a href="https://biomejs.dev" target="_blank" rel="noreferrer">Biome</a></li><li><a href="https://hono.dev" target="_blank" rel="noreferrer">Hono</a></li><li><a href="https://github.com/poolifier/poolifier-web-worker" target="_blank" rel="noreferrer">poolifier-web-worker</a></li><li><a href="https://github.com/isaacs/tshy" target="_blank" rel="noreferrer">tshy</a></li><li><a href="https://github.com/mcollina/autocannon" target="_blank" rel="noreferrer">autocannon</a></li></ul><h3 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h3><p>This project is licensed under the MIT License.</p><hr><p>QuickJS 1.0.0 is ideal for developers looking to execute JavaScript code securely within a TypeScript application, ensuring both performance and safety with the QuickJS WebAssembly sandbox. Try it out and let us know what you think!</p><p><a href="https://github.com/sebastianwessel/quickjs" target="_blank" rel="noreferrer">Check out QuickJS on GitHub</a></p>`,19)]))}const u=i(t,[["render",l]]);export{d as __pageData,u as default};
